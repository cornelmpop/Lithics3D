% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mesh_mark_pois.R
\name{mesh_mark_pois}
\alias{mesh_mark_pois}
\title{Interactively record points of interest (POIs) on the surface of a 3D mesh.}
\usage{
mesh_mark_pois(
  mesh,
  pois = data.frame(),
  button = "right",
  prev_color = NA,
  color = "red",
  size = 12
)
}
\arguments{
\item{mesh}{A triangular mesh object (\code{mesh3d}) to be marked.}

\item{pois}{(Optional) A data frame representing previously marked POIs. It
should be the output of a previous run of this or the
\code{\link[=drop_poi]{drop_poi()}} function.}

\item{button}{The mouse button used for marking POIs. Defaults to "right".}

\item{prev_color}{The color used to display previously marked POIs.
Defaults to NA, which results in automatically generated colors.}

\item{color}{The color for newly marked POIs. Defaults to "red".}

\item{size}{The size of the POI markers. Defaults to 12.}
}
\value{
A data frame containing the marked POIs with columns "x", "y", "z",
and "Tag".
}
\description{
This function enables interactive recording of POIs on a 3D mesh. It displays
the mesh along with any previously marked POIs and allows users to select
new POIs using a mouse-driven interface. POIs are marked by clicking on the
mesh surface. The function returns a data frame containing the marked POIs.
}
\details{
Note that, unless the prev_color argument is set, the colors of previously
marked POIs will be assigned along a red-to-blue palette, in the order in
which the POIs were selected. This is so that the order of the POIs can be
visualized.

This function uses the 'rgl' package to provide an interactive 3D environment
for marking POIs. It requires an open RGL window to function properly. If no
window is open, it plots the mesh and previously marked POIs, if any.

Users can mark new POIs by clicking on the mesh surface. The marked POIs are
displayed as colored markers, and their coordinates are stored in the
returned data frame.
}
\examples{
\dontrun{
# Example usage:
# Create a dataset with marked POIs
mesh <- mesh_recenter(demoFlake2$mesh)$mesh # Ensure the mesh is centered
pois <- mesh_mark_pois(mesh)

# Drop the last POI and update the 3D scene
pois <- drop_poi(pois)

# Close the 3D
close3d()

# Plot the mesh again, showing previously marked POIs
pois <- mesh_mark_pois(mesh, pois)
}

}
\seealso{
\code{\link[=drop_poi]{drop_poi()}} for removing bad POIs
}
\keyword{'3D}
\keyword{'POI}
\keyword{'digitization'}
\keyword{'interactive}
\keyword{'interactive'}
\keyword{'landmark}
\keyword{'mesh}
\keyword{'points}
\keyword{'rgl'}
\keyword{'surface}
\keyword{3D'}
\keyword{annotation'}
\keyword{capture'}
\keyword{digitization'}
\keyword{interest'}
\keyword{marking'}
\keyword{of}
\keyword{scanning'}
\keyword{tagging'}
