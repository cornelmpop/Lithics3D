% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edgeAngles_visualize.R
\name{edge_angles_vis3d}
\alias{edge_angles_vis3d}
\title{3D visualizer for edgeAngles output}
\usage{
edge_angles_vis3d(ea_output, show_mesh = NULL, show_pois = NULL)
}
\arguments{
\item{ea_output}{A list corresponding to the unmodified output of
\code{\link[=edgeAngles]{edgeAngles()}}.}

\item{show_mesh}{An optional \code{mesh3d} object corresponding to the mesh on
which the angles were measured.}

\item{show_pois}{An optional data.frame corresponding to the c.lms argument
passed to the edgeAngles function when the angles were measured.}
}
\value{
The ID of the RGL window where the results were plotted.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

Shows where edge angles were measured in a previous run of the \code{\link[=edgeAngles]{edgeAngles()}}
function. The following elements are always displayed:
\enumerate{
\item \strong{Blue lines}: Edge angles at each edge sampling point.
\item \strong{Black lines}: Distances between the endpoints of the blue lines at each
sampling point.
\item \strong{Numbers}: Sequential IDs of the measurements, corresponding to the
numeric index in the edgeAngles output. See the documentation for the
\code{\link[=edgeAngles]{edgeAngles()}} function for more details.
}

The following optional elements may also be displayed:
\enumerate{
\item \strong{Purple points}: Points that define the edge curve (see the \code{show_pois}
parameter).
\item \strong{Green semi-transparent mesh}: The mesh on which the angles were
computed (see the \code{show_mesh} parameter).
}
}
\details{
Loops through the output of \code{\link[=edgeAngles]{edgeAngles()}} plotting key parameters for each
angle measurement in a new RGL window.
}
\examples{
\dontrun{
library(rgl)

# Compute edge angles using included demo data:
data(demoFlake2)
e.curve = sPathConnect(demoFlake2$lms[1:4, ],
                       demoFlake2$mesh, path.choice = "ridges")
mv <- t(demoFlake2$mesh$vb)
path.res <- pathResample(mv[e.curve,1:3], 30, method = "npts")
res = edgeAngles(demoFlake2$mesh, path.res, m.d = 3)

# Visualize what was measured, and where:
window_id <- edge_angles_vis3d(res,
                               show_mesh = demoFlake2$mesh,
                               show_pois = path.res)

# Close the window:
close3d(window_id)
}
}
\author{
Cornel M. Pop
}
